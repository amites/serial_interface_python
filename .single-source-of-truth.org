#+EXPORT_FILE_NAME: README.md
#+OPTIONS: toc:nil |:t ^:nil tags:nil

#+NAME: name
#+BEGIN_SRC text :exports none :noweb yes
serial_interface
#+END_SRC

#+NAME: version
#+BEGIN_SRC text :exports none :noweb yes
2.2.1
#+END_SRC

#+NAME: repository-name
#+BEGIN_SRC text :exports none :noweb yes
serial_interface_python
#+END_SRC

#+NAME: guix-name
#+BEGIN_SRC text :exports none :noweb yes
python-serial-interface
#+END_SRC

#+NAME: description
#+BEGIN_SRC text :exports none :noweb yes
Extends pyserial Serial to add convenience methods.
#+END_SRC

#+NAME: license
#+BEGIN_SRC text :exports none :noweb yes
BSD 3-Clause License
#+END_SRC

#+NAME: url
#+BEGIN_SRC text :exports none :noweb yes
https://github.com/janelia-pypi/<<repository-name>>
#+END_SRC

#+NAME: author
#+BEGIN_SRC text :exports none :noweb yes
Peter Polidoro
#+END_SRC

#+NAME: email
#+BEGIN_SRC text :exports none :noweb yes
peter@polidoro.io
#+END_SRC

#+NAME: copyright
#+BEGIN_SRC text :exports none :noweb yes
2022 Howard Hughes Medical Institute
#+END_SRC

#+NAME: dependencies
#+BEGIN_SRC text :exports none :noweb yes
pyserial
#+END_SRC

#+BEGIN_EXAMPLE
<!-- README.md is generated automatically from .single-source-of-truth.org
File edits may be overwritten! -->
#+END_EXAMPLE

* About

#+BEGIN_SRC markdown :noweb yes
- Name: <<name>>
- Version: <<version>>
- Description: <<description>>
- License: <<license>>
- URL: <<url>>
- Author: <<author>>
- Email: <<email>>
- Copyright: <<copyright>>
- Dependencies:
  - <<dependencies>>
#+END_SRC

* Example Usage

#+BEGIN_SRC python
from serial_interface import SerialInterface, find_serial_interface_ports
find_serial_interface_ports() # Returns list of available serial ports

dev = SerialInterface() # Might automatically find device if one available

# if it is not found automatically, specify port directly
dev = SerialInterface(port='/dev/ttyUSB0') # Linux
dev = SerialInterface(port='/dev/tty.usbmodem262471') # Mac OS X
dev = SerialInterface(port='COM3') # Windows

dev.get_device_info()

from serial_interface import SerialInterfaces

devs = SerialInterfaces()  # Might automatically find all available devices

# if they are not found automatically, specify ports to use
devs = SerialInterfaces(use_ports=['/dev/ttyUSB0','/dev/ttyUSB1']) # Linux
devs = SerialInterfaces(use_ports=['/dev/tty.usbmodem262471','/dev/tty.usbmodem262472']) # Mac OS X
devs = SerialInterfaces(use_ports=['COM3','COM4']) # Windows

devs.get_devices_info()
devs.sort_by_port()
dev = devs[0]
dev.get_device_info()
#+END_SRC

* Installation

[[https://github.com/janelia-pypi/python_setup]]

** Linux

*** pip

#+BEGIN_SRC sh :noweb yes
python3 -m venv ~/venvs/<<name>>
source ~/venvs/<<name>>/bin/activate
pip install <<name>>
#+END_SRC

*** guix

Setup guix-janelia channel:

https://github.com/guix-janelia/guix-janelia

#+BEGIN_SRC sh :noweb yes
guix install <<guix-name>>
#+END_SRC

** Windows

*** pip

#+BEGIN_SRC sh :noweb yes
python3 -m venv C:\venvs\<<name>>
C:\venvs\<<name>>\Scripts\activate
pip install <<name>>
#+END_SRC

* Development :noexport:

** Guix

#+BEGIN_SRC sh :noweb yes
git clone <<url>>
cd <<repository_name>>
make shell
make edits
make all
exit
#+END_SRC

* Tangled Files                                                    :noexport:

#+BEGIN_SRC text :tangle MANIFEST.in :exports none :noweb yes
# MANIFEST.in is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
include README.md
include LICENSE
#+END_SRC

#+BEGIN_SRC text :tangle pyproject.toml :exports none :noweb yes
# pyproject.toml is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
[build-system]
requires = [
    "setuptools>=42",
    "wheel"
]
#+END_SRC

#+BEGIN_SRC text :tangle setup.cfg :exports none :noweb yes
# setup.cfg is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
[metadata]
name = <<name>>
version = <<version>>
author = <<author>>
author_email = <<email>>
url = <<url>>
description = <<description>>
long_description = file: README.md
long_description_content_type = text/markdown
license = <<license>>
classifiers =
    Programming Language :: Python :: 3

[options]
packages = find:
install_requires =
    <<dependencies>>

[options.packages.find]
exclude =
    examples*
    tools*
    docs*
    <<name>>.tests*

[bdist_wheel]
# This flag says that the code is written to work on both Python 2 and Python
# 3. If at all possible, it is good practice to do this. If you cannot, you
# will need to generate wheels for each Python version that you support.
universal=1
#+END_SRC

#+BEGIN_SRC python :tangle setup.py :exports none :noweb yes
# setup.py is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
from setuptools import setup


if __name__ == '__main__':
    setup()
#+END_SRC

#+BEGIN_SRC python :tangle serial_interface/__about__.py :exports none :noweb yes
# __about__.py is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
__version__ = '<<version>>'
__description__ = '<<description>>'
__license__ = '<<license>>'
__url__ = '<<url>>'
__author__ = '<<author>>'
__email__ = '<<email>>'
__copyright__ = '<<copyright>>'
#+END_SRC

#+BEGIN_SRC python :tangle serial_interface/__init__.py :exports none :noweb yes
'''
<<description>>
'''

# __init__.py is generated automatically from .single-source-of-truth.org
# File edits may be overwritten!
from serial_interface.__about__ import (
    __author__,
    __copyright__,
    __email__,
    __license__,
    __description__,
    __url__,
    __version__,
)

from .serial_interface import SerialInterface, SerialInterfaces, find_serial_interface_ports, find_serial_interface_port, WriteFrequencyError, WriteError, ReadError, __version__
#+END_SRC
